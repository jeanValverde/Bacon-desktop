#pragma checksum "C:\Users\jean\Desktop\PORTAFOLIO DE TITULO\bacon-desktop\Views\Cocina\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7990646057d0b1eb997ab1ae509d8f33bf626c13"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cocina_Index), @"mvc.1.0.view", @"/Views/Cocina/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cocina/Index.cshtml", typeof(AspNetCore.Views_Cocina_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7990646057d0b1eb997ab1ae509d8f33bf626c13", @"/Views/Cocina/Index.cshtml")]
    public class Views_Cocina_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 11448, true);
            WriteLiteral(@"<bacon class=""task-bacon"">
    <!--inicio row-->
    <div class=""row"">
        <div class=""col-md-3 grid-margin"">
            <div class=""card"">
                <div class=""card-body"">
                    <h4 class=""card-title"">Totalidad de recetas ordenadas</h4>
                    <button class=""btn btn-primary"" id=""async-msg"" onclick=""algo(this)"">Ping</button>
                    <button class=""btn btn-primary"" id=""recetas"" onclick=""cocinaIndex()"">Cargar Recetas</button>
                    <div class=""alert alert-info"" id=""async-reply""></div>
                    
                    <div class=""template-demo"">
                        <table class=""table mb-0"">
                            <thead>
                                <tr>
                                    <th class=""pl-0"">Receta</th>
                                    <th class=""text-right"">Cantidad</th>
                                </tr>
                            </thead>
                            <tbody>
         ");
            WriteLiteral(@"                       <tr>
                                    <td class=""pl-0"">
                                        <a href=""#receta"" data-toggle=""modal"" data-target=""#receta"">Nombre de la receta</a>
                                        <div class=""modal fade"" id=""receta"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel-2"" style=""display: none;"" aria-hidden=""true"">
                                            <div class=""modal-dialog"" role=""document"">
                                                <div class=""modal-content"">
                                                    <div class=""modal-header"">
                                                        <h5 class=""modal-title"" id=""exampleModalLabel-2"">Nombre de la receta</h5>
                                                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                            <span aria-hidden=""true"">Ã—</span>
                        ");
            WriteLiteral(@"                                </button>
                                                    </div>
                                                    <div class=""modal-body"">
                                                        <p>

                                                        </p>
                                                    </div>
                                                    <div class=""modal-footer"">
                                                        <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Cerrar</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">3</div>
                      ");
            WriteLiteral(@"              </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Info</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">5</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Danger</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">1</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Success</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primar");
            WriteLiteral(@"y"">9</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Warning</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">4</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Info</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">5</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Success</td>
                                    <td class=""pr-0 text-right"">
                                        <div c");
            WriteLiteral(@"lass=""badge badge-pill badge-primary"">9</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Warning</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">4</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Info</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">5</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Danger</td>
                                    <td class=""pr-0 text-right"">
            ");
            WriteLiteral(@"                            <div class=""badge badge-pill badge-primary"">1</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Success</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">9</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class=""pl-0"">Rounded Warning</td>
                                    <td class=""pr-0 text-right"">
                                        <div class=""badge badge-pill badge-primary"">4</div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        <");
            WriteLiteral(@"/div>

        <div class=""col-md-9 grid-margin"">

            <div class=""card-columns"" id=""target-ord-cocina"">
                <!--inicio tarjeta de ordenes--->
                


                <!--fin tarjeta de ordenes--->
            </div>


        </div>
        <!---fin columnas--->
    </div>
    <!--fin row-->

    <style>
        
    </style>

    <script type=""text/javascript"" >

        const { ipcRenderer } = require(""electron"");



        function cocinaIndex() {
            //Carga de las ordenes Cocina 
            ipcRenderer.send(""async-receta"", 'buscar');
            var loader = document.getElementById('loader');
            loader.style.visibility = '';
            ///fin de carga de ordenes 
        }


        ipcRenderer.on('asynchronous-reply-receta', (event, arg) => {

                              

            let message = """";

             document.getElementById('target-ord-cocina').innerHTML = """";

            for (var i = 0; i");
            WriteLiteral(@" < arg.length; i++) {

                    var recetas = """";
                 
                    for (var j = 0; j < arg[i].recetaOrdenada.length ; j++) {

                        recetas += ""<tr><td class='pl-0'  >"" + cortarTextoConPuntos(arg[i].recetaOrdenada[j].receta.nombreReceta,37) + ""</td>""
                            + ""<td class='pr-0 text-center'><div class='badge badge-pill badge-outline-primary'>""
                            + arg[i].recetaOrdenada[j].cantidad + ""</div></td></tr>"";

                    }
                
                message += ""<div class='card'><div class='card-body'><h4 class='card-title mt-3'>Orden nÃºmero #"" + arg[i].orden.idOrden + ""</h4>""
                    + ""<div class='badge badge-outline-primary'>Mesa "" + arg[i].orden.cliente.mesa.numeroMesa +  ""</div>""
                    + ""<div class='badge badge-outline-primary'>40 minutos</div>""
                    + ""<div class='badge badge-info mr-3'>Ingresado</div> <br />""
                    + ""<table class");
            WriteLiteral(@"='table mb-0'><thead><tr><th class='pl-0'>Receta</th><th class='text-right'>Cantidad</th></tr></thead><tbody>""

                    + recetas 

                    + ""</tbody></table>""
                    + ""<h4 class='card-title mt-3'>DescripciÃ³n</h4>""
                    + ""<p class='card-text'>"" + "" "" + ""</p>""
                    + ""<table class='table mb-0'><thead><tr><th class='text-right'>""
                    + ""<button type='button' class='btn btn-outline-success btn-fw'>Orden Lista</button></th>""
                    + ""</tr></thead></table></div></div>"";

            }

            document.getElementById('target-ord-cocina').innerHTML = message;

            var loader = document.getElementById('loader');
            loader.style.visibility = 'hidden';

            cargarTextos();

        });


        function algo(btn) {
            var loader = document.getElementById('loader');
            loader.style.visibility = '';
            btn.disabled = true;
            ipcR");
            WriteLiteral(@"enderer.send(""async-msg"", 'ping');
        }


        ipcRenderer.on('asynchronous-reply', (event, arg) => {

            let message = """";


            for (var i = 0; i < arg.length; i++) {
                message += arg[i].nombres_personal + "" "";
            }
            
            document.getElementById('async-reply').innerHTML = message;

            var loader = document.getElementById('loader');
            loader.style.visibility = 'hidden';
            document.getElementById('async-msg').disabled = false;

        });

        function cortarTextoConPuntos(texto, limite)
        {
           
          var puntosSuspensivos = ""..."";
          if(texto.length > limite)
          {
            texto = texto.substring(0,limite) + puntosSuspensivos;
          }

            return texto;
        }

        function cargarTextos() {

            var highlightedItems = document.querySelector("".cortarTexto"");

            highlightedItems.forEach(function (userIte");
            WriteLiteral("m) {\r\n                var text = cortarTextoConPuntos(userItem.innerHTML, 6);\r\n                userItem.innerHTML = text;\r\n            });\r\n        }\r\n\r\n    </script>\r\n\r\n\r\n</bacon>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
